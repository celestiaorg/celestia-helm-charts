---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Values.global.name }}-{{ .Values.global.network }}-app"
  namespace: {{ tpl .Values.global.namespace . }}
  labels:
    app: celestia-app
    {{- toYaml .Values.global.labels | trim | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celestia-app
      {{- toYaml .Values.global.labels | trim | nindent 6 }}
  serviceName: "{{ .Values.global.name }}-svc"
  template:
    metadata:
      labels:
        app: celestia-app
        {{- toYaml .Values.global.labels | trim | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 10001
        fsGroupChangePolicy: "OnRootMismatch"
      {{- if .Values.global.nodePool.enabled }}
      {{- include "workload.nodepool" . | nindent 6 }}
      {{- end }}
      initContainers:
        - name: celestia-app-init
          image: busybox:latest  # consider using a more recent version
          command: [ "sh", "-c",
            "export CELESTIA_APP_HOME={{ (tpl .Values.celestiaApp.home.path . ) }};
            mkdir -p $CELESTIA_APP_HOME/data;
            mkdir -p $CELESTIA_APP_HOME/config;
            $CELESTIA_APP_HOME/scripts/scripts_{{ .Values.appInitContainer.scriptName }} $CELESTIA_APP_HOME {{ tpl .Values.celestiaApp.chainId . }};
            chown -R 10001:10001 $CELESTIA_APP_HOME/data; chown -R 10001:10001 $CELESTIA_APP_HOME/config;
            chown -R 10001:10001 $CELESTIA_APP_HOME/config/*.toml $CELESTIA_APP_HOME/config/*.json;" ]
          env:
            - name: QUICKSYNC_ENABLED
              value: "{{ .Values.celestiaApp.snapshotQuickSync.enabled }}"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            # Init script
            - name: {{ .Values.appInitContainer.configmapName }}
              mountPath: "{{ (tpl .Values.celestiaApp.home.path . ) }}/scripts"
            # Celestia app home directory volume
            - name: {{ tpl .Values.celestiaApp.home.volume.name . }}
              mountPath: {{ (tpl .Values.celestiaApp.home.path . ) }}
            # Configuration files
            - name: {{ tpl .Values.celestiaApp.home.configVolume.name . }}
              mountPath: "{{ (tpl .Values.celestiaApp.home.path . ) }}/config"

      containers:
        #### CELESTIA APP NODE ####
        - name: {{ .Values.global.name }}
          image: "{{ .Values.celestiaApp.image.registry }}/{{ tpl .Values.celestiaApp.image.repository . }}/{{ tpl .Values.celestiaApp.image.name . }}:{{ .Values.celestiaApp.image.tag }}"
          command:
            - celestia-appd
            - start
            - --home
            - {{ tpl .Values.celestiaApp.home.path . }}
          imagePullPolicy: {{ .Values.celestiaApp.image.pullPolicy }}
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            allowPrivilegeEscalation: false
        {{- if .Values.celestiaApp.ports }}
          ports:
          {{- range .Values.celestiaApp.ports }}
            - containerPort: {{ .port }}
              name: {{ tpl .name $ }}
              protocol: TCP
          {{- end }}
        {{- end }}
        {{- if .Values.celestiaApp.resources }}
          resources:
          {{- toYaml .Values.celestiaApp.resources | trim | nindent 12 }}
        {{- end }}
          volumeMounts:
            # Home directory volume
            - name: {{ tpl .Values.celestiaApp.home.configVolume.name . }}
              mountPath: "{{ (tpl .Values.celestiaApp.home.path . ) }}/config"
            - name: {{ tpl .Values.celestiaApp.home.volume.name . }}
              mountPath: {{ (tpl .Values.celestiaApp.home.path . ) }}
      volumes:
        # ------------ INIT CELESTIA APP SCRIPT -------------
        - name: {{ .Values.appInitContainer.configmapName }}
          configMap:
            defaultMode: 0744
            name: {{ .Values.appInitContainer.configmapName }}
        # ------------ CELESTIA APP ------------
        # Celestia app home directory volume
        - name: {{ tpl .Values.celestiaApp.home.configVolume.name . }}
          persistentVolumeClaim:
            claimName: {{ tpl .Values.celestiaApp.home.configVolume.name . }}
        - name: {{ tpl .Values.celestiaApp.home.volume.name . }}
          persistentVolumeClaim:
            claimName: {{ tpl .Values.celestiaApp.home.volume.name . }}
